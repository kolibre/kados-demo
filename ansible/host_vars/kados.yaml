haproxy_global_ssl_default_bind_ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256"
haproxy_global_ssl_default_bind_options: "no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets"
haproxy_global_ssl_default_server_ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256"
haproxy_global_ssl_default_server_options: "no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets"

haproxy_version: 3.0

haproxy_restart_handler_state: reloaded

haproxy_dependencies:
  - name: haproxy
    state: present

haproxy_defaults_timeout:
  - type: connect
    timeout: 5s
  - type: client
    timeout: 65s
  - type: server
    timeout: 65s

haproxy_frontend:
  - name: main-http
    description: Main for all HTTP traffic
    bind:
      - listen: "0.0.0.0:80"
    mode: http
    option:
      - httplog
      - forwardfor
    timeout:
      - type: client-fin
        timeout: 1m
    acl:
      - string: path_is_empty path /
      - string: path_begins_with_v1 path_beg /v1 /daisyonline1
      - string: path_begins_with_v2 path_beg /v2 /daisyonline2
      - string: path_begins_with_contents_announcements_questions path_beg /contents /announcements /questions //contents //announcements //questions
    use_backend:
      - nginx if path_is_empty
      - nginx if path_begins_with_contents_announcements_questions
      - kados-v1 if path_begins_with_v1
      - kados-v2 if path_begins_with_v2
    default_backend: kados-v1

haproxy_backend:
  - name: nginx
    description: HTTP backend to kados file server
    mode: http
    balance: roundrobin
    server:
      - name: local
        listen: 127.0.0.1:8080
  - name: kados-v1
    description: HTTP backend to kados v1 service
    mode: http
    balance: roundrobin
    http_request:
      - action: set-path
        param: "%[path,regsub(^/v1,,g)]" # strip /v1 in path
      - action: set-path
        param: "%[path,regsub(^/daisyonline1,,g)]" # strip /daisyonline1 in path
    server:
      - name: local
        listen: 127.0.0.1:8081
  - name: kados-v2
    description: HTTP backend to kados v2 service
    mode: http
    balance: roundrobin
    http_request:
      - action: set-path
        param: "%[path,regsub(^/v2,,g)]" # strip /v2 in path
      - action: set-path
        param: "%[path,regsub(^/daisyonline2,,g)]" # strip /daisyonline2 in path
    server:
      - name: local
        listen: 127.0.0.1:8082